{
  "contractName": "IntermediaryMedianizer",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IMedianizer",
          "name": "realMedianizer",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getMedianizer",
      "outputs": [
        {
          "internalType": "contract IMedianizer",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "peek",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "read",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract IMedianizer",
          "name": "realMedianizer",
          "type": "address"
        }
      ],
      "name": "setMedianizer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IMedianizer\",\"name\":\"realMedianizer\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMedianizer\",\"outputs\":[{\"internalType\":\"contract IMedianizer\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"peek\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"read\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract IMedianizer\",\"name\":\"realMedianizer\",\"type\":\"address\"}],\"name\":\"setMedianizer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is used in Keep testnets where Maker has deployed a Medianizer      instance that needs to authorize a single consumer, to enable multiple      tBTC deployments to happen in the background and be pointed at a stable      medianizer instance that is authorized on the Maker contract. It allows      the updating of the backing medianizer and therefore is NOT suitable      for mainnet deployment.\",\"methods\":{\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"IntermediaryMedianizer is an updatable intermediary between a real        medianizer and IMedianizer users.\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/symf/IdeaProjects/tbtc/solidity/contracts/test/price-feed/IntermediaryMedianizer.sol\":\"IntermediaryMedianizer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/symf/IdeaProjects/tbtc/solidity/contracts/external/IMedianizer.sol\":{\"keccak256\":\"0xbe5c1dbd0f097ed0ef72e2a61ab54de315685a835e7dc7f5d3404b5158189c67\",\"urls\":[\"bzz-raw://0519b1ce42540d07debfa8b62a52c6c44b309ea549cc4d3166d4fd821aec9b79\",\"dweb:/ipfs/QmYD2cojTyk2ZDrWrTKSthVUAPydzAgPrpRWeiwJyksPJV\"]},\"/Users/symf/IdeaProjects/tbtc/solidity/contracts/test/price-feed/IntermediaryMedianizer.sol\":{\"keccak256\":\"0xc5162a7c2b89169cad7a30c1bf52013a53b0cf42ff2e082c0e0042582d4b8e97\",\"urls\":[\"bzz-raw://165f4a34639ca53bbe4148d0b4ab84de069196c238ea2df3a116d74b11094654\",\"dweb:/ipfs/QmSJDDp8FA3W3k51moWUWzRjnBiKbgerLppVgPA6oHx21h\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xf79fb10e8235770eb4aea7249034076a3cc9f9119ad944fc48705bae9c9d20dc\",\"urls\":[\"bzz-raw://cd3429aa9a4878dcf6c73faa32c3722f4013d4be012ece543b246faa6b50f55c\",\"dweb:/ipfs/QmS55hgTvNEAKinus19m65CB4wcymN8EiUPFpRx5tYJ1i2\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516105b73803806105b78339818101604052602081101561003357600080fd5b5051600080546001600160a01b03191633178082556040516001600160a01b039190911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3600180546001600160a01b0319166001600160a01b039290921691909117905561050a806100ad6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100f65780638f32d59b146100fe578063e7baf8dd1461011a578063f2fde38b1461014057610088565b8063242043491461008d57806357de26a4146100b157806359e02dd7146100cb578063715018a6146100ec575b600080fd5b610095610166565b604080516001600160a01b039092168252519081900360200190f35b6100b9610175565b60408051918252519081900360200190f35b6100d36101eb565b6040805192835290151560208301528051918290030190f35b6100f461026c565b005b61009561030f565b61010661031e565b604080519115158252519081900360200190f35b6100f46004803603602081101561013057600080fd5b50356001600160a01b031661032f565b6100f46004803603602081101561015657600080fd5b50356001600160a01b03166103aa565b6001546001600160a01b031690565b600154604080516315f789a960e21b815290516000926001600160a01b0316916357de26a4916004808301926020929190829003018186803b1580156101ba57600080fd5b505afa1580156101ce573d6000803e3d6000fd5b505050506040513d60208110156101e457600080fd5b5051905090565b600154604080516359e02dd760e01b8152815160009384936001600160a01b03909116926359e02dd79260048083019392829003018186803b15801561023057600080fd5b505afa158015610244573d6000803e3d6000fd5b505050506040513d604081101561025a57600080fd5b50805160209091015190925090509091565b61027461031e565b6102c5576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b61033761031e565b610388576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6103b261031e565b610403576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61040c8161040f565b50565b6001600160a01b0381166104545760405162461bcd60e51b81526004018080602001828103825260268152602001806104b06026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a265627a7a7231582030f5e0ac371827bd4ee4f473e97a436635e0d3d249ea3dc0f9ed35a507c61c9064736f6c63430005110032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100f65780638f32d59b146100fe578063e7baf8dd1461011a578063f2fde38b1461014057610088565b8063242043491461008d57806357de26a4146100b157806359e02dd7146100cb578063715018a6146100ec575b600080fd5b610095610166565b604080516001600160a01b039092168252519081900360200190f35b6100b9610175565b60408051918252519081900360200190f35b6100d36101eb565b6040805192835290151560208301528051918290030190f35b6100f461026c565b005b61009561030f565b61010661031e565b604080519115158252519081900360200190f35b6100f46004803603602081101561013057600080fd5b50356001600160a01b031661032f565b6100f46004803603602081101561015657600080fd5b50356001600160a01b03166103aa565b6001546001600160a01b031690565b600154604080516315f789a960e21b815290516000926001600160a01b0316916357de26a4916004808301926020929190829003018186803b1580156101ba57600080fd5b505afa1580156101ce573d6000803e3d6000fd5b505050506040513d60208110156101e457600080fd5b5051905090565b600154604080516359e02dd760e01b8152815160009384936001600160a01b03909116926359e02dd79260048083019392829003018186803b15801561023057600080fd5b505afa158015610244573d6000803e3d6000fd5b505050506040513d604081101561025a57600080fd5b50805160209091015190925090509091565b61027461031e565b6102c5576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b61033761031e565b610388576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6103b261031e565b610403576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61040c8161040f565b50565b6001600160a01b0381166104545760405162461bcd60e51b81526004018080602001828103825260268152602001806104b06026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a265627a7a7231582030f5e0ac371827bd4ee4f473e97a436635e0d3d249ea3dc0f9ed35a507c61c9064736f6c63430005110032",
  "sourceMap": "697:637:35:-;;;801:96;8:9:-1;5:2;;;30:1;27;20:12;5:2;801:96:35;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;801:96:35;657:6:60;:19;;-1:-1:-1;;;;;;657:19:60;666:10;657:19;;;;691:40;;-1:-1:-1;;;;;724:6:60;;;;;657;691:40;;657:6;;691:40;858:15:35;:32;;-1:-1:-1;;;;;;858:32:35;-1:-1:-1;;;;;858:32:35;;;;;;;;;;697:637;;;-1:-1:-1;697:637:35;;",
  "deployedSourceMap": "697:637:35:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;697:637:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;903:100;;;:::i;:::-;;;;-1:-1:-1;;;;;903:100:35;;;;;;;;;;;;;;1115:94;;;:::i;:::-;;;;;;;;;;;;;;;;1009:100;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1599:137:60;;;:::i;:::-;;814:77;;;:::i;1165:90::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;1215:117:35;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1215:117:35;-1:-1:-1;;;;;1215:117:35;;:::i;1885:107:60:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1885:107:60;-1:-1:-1;;;;;1885:107:60;;:::i;903:100:35:-;981:15;;-1:-1:-1;;;;;981:15:35;903:100;:::o;1115:94::-;1180:15;;:22;;;-1:-1:-1;;;1180:22:35;;;;1154:7;;-1:-1:-1;;;;;1180:15:35;;:20;;:22;;;;;;;;;;;;;;:15;:22;;;5:2:-1;;;;30:1;27;20:12;5:2;1180:22:35;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1180:22:35;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1180:22:35;;-1:-1:-1;1115:94:35;:::o;1009:100::-;1080:15;;:22;;;-1:-1:-1;;;1080:22:35;;;;1048:7;;;;-1:-1:-1;;;;;1080:15:35;;;;:20;;:22;;;;;;;;;;;:15;:22;;;5:2:-1;;;;30:1;27;20:12;5:2;1080:22:35;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1080:22:35;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1080:22:35;;;;;;;;;-1:-1:-1;1080:22:35;-1:-1:-1;1009:100:35;;:::o;1599:137:60:-;1018:9;:7;:9::i;:::-;1010:54;;;;;-1:-1:-1;;;1010:54:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1697:1;1681:6;;1660:40;;-1:-1:-1;;;;;1681:6:60;;;;1660:40;;1697:1;;1660:40;1727:1;1710:19;;-1:-1:-1;;;;;;1710:19:60;;;1599:137::o;814:77::-;852:7;878:6;-1:-1:-1;;;;;878:6:60;814:77;:::o;1165:90::-;1205:4;1242:6;-1:-1:-1;;;;;1242:6:60;1228:10;:20;;1165:90::o;1215:117:35:-;1018:9:60;:7;:9::i;:::-;1010:54;;;;;-1:-1:-1;;;1010:54:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1293:15:35;:32;;-1:-1:-1;;;;;;1293:32:35;-1:-1:-1;;;;;1293:32:35;;;;;;;;;;1215:117::o;1885:107:60:-;1018:9;:7;:9::i;:::-;1010:54;;;;;-1:-1:-1;;;1010:54:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1957:28;1976:8;1957:18;:28::i;:::-;1885:107;:::o;2093:225::-;-1:-1:-1;;;;;2166:22:60;;2158:73;;;;-1:-1:-1;;;2158:73:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2267:6;;;2246:38;;-1:-1:-1;;;;;2246:38:60;;;;2267:6;;;2246:38;;;2294:6;:17;;-1:-1:-1;;;;;;2294:17:60;-1:-1:-1;;;;;2294:17:60;;;;;;;;;;2093:225::o",
  "source": "pragma solidity 0.5.17;\n\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\nimport \"../../../contracts/external/IMedianizer.sol\";\n\n/// @title IntermediaryMedianizer is an updatable intermediary between a real\n///        medianizer and IMedianizer users.\n/// @dev This is used in Keep testnets where Maker has deployed a Medianizer\n///      instance that needs to authorize a single consumer, to enable multiple\n///      tBTC deployments to happen in the background and be pointed at a stable\n///      medianizer instance that is authorized on the Maker contract. It allows\n///      the updating of the backing medianizer and therefore is NOT suitable\n///      for mainnet deployment.\ncontract IntermediaryMedianizer is Ownable, IMedianizer {\n    IMedianizer private _realMedianizer;\n\n    constructor(IMedianizer realMedianizer) public {\n        _realMedianizer = realMedianizer;\n    }\n\n    function getMedianizer() external view returns (IMedianizer) {\n        return _realMedianizer;\n    }\n\n    function peek() external view returns (uint256, bool) {\n        return _realMedianizer.peek();\n    }\n\n    function read() external view returns (uint256) {\n        return _realMedianizer.read();\n    }\n\n    function setMedianizer(IMedianizer realMedianizer) public onlyOwner {\n        _realMedianizer = realMedianizer;\n    }\n}\n",
  "sourcePath": "/Users/symf/IdeaProjects/tbtc/solidity/contracts/test/price-feed/IntermediaryMedianizer.sol",
  "ast": {
    "absolutePath": "/Users/symf/IdeaProjects/tbtc/solidity/contracts/test/price-feed/IntermediaryMedianizer.sol",
    "exportedSymbols": {
      "IntermediaryMedianizer": [
        10447
      ]
    },
    "id": 10448,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10386,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:35"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 10387,
        "nodeType": "ImportDirective",
        "scope": 10448,
        "sourceUnit": 16760,
        "src": "25:63:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/symf/IdeaProjects/tbtc/solidity/contracts/external/IMedianizer.sol",
        "file": "../../../contracts/external/IMedianizer.sol",
        "id": 10388,
        "nodeType": "ImportDirective",
        "scope": 10448,
        "sourceUnit": 5432,
        "src": "89:53:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10389,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16759,
              "src": "732:7:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$16759",
                "typeString": "contract Ownable"
              }
            },
            "id": 10390,
            "nodeType": "InheritanceSpecifier",
            "src": "732:7:35"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10391,
              "name": "IMedianizer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5431,
              "src": "741:11:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMedianizer_$5431",
                "typeString": "contract IMedianizer"
              }
            },
            "id": 10392,
            "nodeType": "InheritanceSpecifier",
            "src": "741:11:35"
          }
        ],
        "contractDependencies": [
          5431,
          16759
        ],
        "contractKind": "contract",
        "documentation": "@title IntermediaryMedianizer is an updatable intermediary between a real\n        medianizer and IMedianizer users.\n @dev This is used in Keep testnets where Maker has deployed a Medianizer\n      instance that needs to authorize a single consumer, to enable multiple\n      tBTC deployments to happen in the background and be pointed at a stable\n      medianizer instance that is authorized on the Maker contract. It allows\n      the updating of the backing medianizer and therefore is NOT suitable\n      for mainnet deployment.",
        "fullyImplemented": true,
        "id": 10447,
        "linearizedBaseContracts": [
          10447,
          5431,
          16759
        ],
        "name": "IntermediaryMedianizer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 10394,
            "name": "_realMedianizer",
            "nodeType": "VariableDeclaration",
            "scope": 10447,
            "src": "759:35:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IMedianizer_$5431",
              "typeString": "contract IMedianizer"
            },
            "typeName": {
              "contractScope": null,
              "id": 10393,
              "name": "IMedianizer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5431,
              "src": "759:11:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMedianizer_$5431",
                "typeString": "contract IMedianizer"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 10403,
              "nodeType": "Block",
              "src": "848:49:35",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10399,
                      "name": "_realMedianizer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10394,
                      "src": "858:15:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMedianizer_$5431",
                        "typeString": "contract IMedianizer"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 10400,
                      "name": "realMedianizer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10396,
                      "src": "876:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMedianizer_$5431",
                        "typeString": "contract IMedianizer"
                      }
                    },
                    "src": "858:32:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMedianizer_$5431",
                      "typeString": "contract IMedianizer"
                    }
                  },
                  "id": 10402,
                  "nodeType": "ExpressionStatement",
                  "src": "858:32:35"
                }
              ]
            },
            "documentation": null,
            "id": 10404,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10397,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10396,
                  "name": "realMedianizer",
                  "nodeType": "VariableDeclaration",
                  "scope": 10404,
                  "src": "813:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IMedianizer_$5431",
                    "typeString": "contract IMedianizer"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10395,
                    "name": "IMedianizer",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5431,
                    "src": "813:11:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMedianizer_$5431",
                      "typeString": "contract IMedianizer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "812:28:35"
            },
            "returnParameters": {
              "id": 10398,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "848:0:35"
            },
            "scope": 10447,
            "src": "801:96:35",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10411,
              "nodeType": "Block",
              "src": "964:39:35",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10409,
                    "name": "_realMedianizer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10394,
                    "src": "981:15:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMedianizer_$5431",
                      "typeString": "contract IMedianizer"
                    }
                  },
                  "functionReturnParameters": 10408,
                  "id": 10410,
                  "nodeType": "Return",
                  "src": "974:22:35"
                }
              ]
            },
            "documentation": null,
            "id": 10412,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMedianizer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "925:2:35"
            },
            "returnParameters": {
              "id": 10408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10407,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10412,
                  "src": "951:11:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IMedianizer_$5431",
                    "typeString": "contract IMedianizer"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10406,
                    "name": "IMedianizer",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5431,
                    "src": "951:11:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMedianizer_$5431",
                      "typeString": "contract IMedianizer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "950:13:35"
            },
            "scope": 10447,
            "src": "903:100:35",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10423,
              "nodeType": "Block",
              "src": "1063:46:35",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 10419,
                        "name": "_realMedianizer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10394,
                        "src": "1080:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMedianizer_$5431",
                          "typeString": "contract IMedianizer"
                        }
                      },
                      "id": 10420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "peek",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5430,
                      "src": "1080:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$_t_bool_$",
                        "typeString": "function () view external returns (uint256,bool)"
                      }
                    },
                    "id": 10421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1080:22:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
                      "typeString": "tuple(uint256,bool)"
                    }
                  },
                  "functionReturnParameters": 10418,
                  "id": 10422,
                  "nodeType": "Return",
                  "src": "1073:29:35"
                }
              ]
            },
            "documentation": null,
            "id": 10424,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "peek",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10413,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1022:2:35"
            },
            "returnParameters": {
              "id": 10418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10415,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10424,
                  "src": "1048:7:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10414,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1048:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10417,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10424,
                  "src": "1057:4:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10416,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1057:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1047:15:35"
            },
            "scope": 10447,
            "src": "1009:100:35",
            "stateMutability": "view",
            "superFunction": 5430,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10433,
              "nodeType": "Block",
              "src": "1163:46:35",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 10429,
                        "name": "_realMedianizer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10394,
                        "src": "1180:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMedianizer_$5431",
                          "typeString": "contract IMedianizer"
                        }
                      },
                      "id": 10430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "read",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5423,
                      "src": "1180:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 10431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1180:22:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10428,
                  "id": 10432,
                  "nodeType": "Return",
                  "src": "1173:29:35"
                }
              ]
            },
            "documentation": null,
            "id": 10434,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "read",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1128:2:35"
            },
            "returnParameters": {
              "id": 10428,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10427,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10434,
                  "src": "1154:7:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10426,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1154:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1153:9:35"
            },
            "scope": 10447,
            "src": "1115:94:35",
            "stateMutability": "view",
            "superFunction": 5423,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10445,
              "nodeType": "Block",
              "src": "1283:49:35",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10441,
                      "name": "_realMedianizer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10394,
                      "src": "1293:15:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMedianizer_$5431",
                        "typeString": "contract IMedianizer"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 10442,
                      "name": "realMedianizer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10436,
                      "src": "1311:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMedianizer_$5431",
                        "typeString": "contract IMedianizer"
                      }
                    },
                    "src": "1293:32:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMedianizer_$5431",
                      "typeString": "contract IMedianizer"
                    }
                  },
                  "id": 10444,
                  "nodeType": "ExpressionStatement",
                  "src": "1293:32:35"
                }
              ]
            },
            "documentation": null,
            "id": 10446,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 10439,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10438,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 16692,
                  "src": "1273:9:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1273:9:35"
              }
            ],
            "name": "setMedianizer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10437,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10436,
                  "name": "realMedianizer",
                  "nodeType": "VariableDeclaration",
                  "scope": 10446,
                  "src": "1238:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IMedianizer_$5431",
                    "typeString": "contract IMedianizer"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10435,
                    "name": "IMedianizer",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5431,
                    "src": "1238:11:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMedianizer_$5431",
                      "typeString": "contract IMedianizer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1237:28:35"
            },
            "returnParameters": {
              "id": 10440,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1283:0:35"
            },
            "scope": 10447,
            "src": "1215:117:35",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 10448,
        "src": "697:637:35"
      }
    ],
    "src": "0:1335:35"
  },
  "legacyAST": {
    "absolutePath": "/Users/symf/IdeaProjects/tbtc/solidity/contracts/test/price-feed/IntermediaryMedianizer.sol",
    "exportedSymbols": {
      "IntermediaryMedianizer": [
        10447
      ]
    },
    "id": 10448,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10386,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:35"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 10387,
        "nodeType": "ImportDirective",
        "scope": 10448,
        "sourceUnit": 16760,
        "src": "25:63:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/symf/IdeaProjects/tbtc/solidity/contracts/external/IMedianizer.sol",
        "file": "../../../contracts/external/IMedianizer.sol",
        "id": 10388,
        "nodeType": "ImportDirective",
        "scope": 10448,
        "sourceUnit": 5432,
        "src": "89:53:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10389,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16759,
              "src": "732:7:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$16759",
                "typeString": "contract Ownable"
              }
            },
            "id": 10390,
            "nodeType": "InheritanceSpecifier",
            "src": "732:7:35"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10391,
              "name": "IMedianizer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5431,
              "src": "741:11:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMedianizer_$5431",
                "typeString": "contract IMedianizer"
              }
            },
            "id": 10392,
            "nodeType": "InheritanceSpecifier",
            "src": "741:11:35"
          }
        ],
        "contractDependencies": [
          5431,
          16759
        ],
        "contractKind": "contract",
        "documentation": "@title IntermediaryMedianizer is an updatable intermediary between a real\n        medianizer and IMedianizer users.\n @dev This is used in Keep testnets where Maker has deployed a Medianizer\n      instance that needs to authorize a single consumer, to enable multiple\n      tBTC deployments to happen in the background and be pointed at a stable\n      medianizer instance that is authorized on the Maker contract. It allows\n      the updating of the backing medianizer and therefore is NOT suitable\n      for mainnet deployment.",
        "fullyImplemented": true,
        "id": 10447,
        "linearizedBaseContracts": [
          10447,
          5431,
          16759
        ],
        "name": "IntermediaryMedianizer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 10394,
            "name": "_realMedianizer",
            "nodeType": "VariableDeclaration",
            "scope": 10447,
            "src": "759:35:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IMedianizer_$5431",
              "typeString": "contract IMedianizer"
            },
            "typeName": {
              "contractScope": null,
              "id": 10393,
              "name": "IMedianizer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5431,
              "src": "759:11:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMedianizer_$5431",
                "typeString": "contract IMedianizer"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 10403,
              "nodeType": "Block",
              "src": "848:49:35",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10399,
                      "name": "_realMedianizer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10394,
                      "src": "858:15:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMedianizer_$5431",
                        "typeString": "contract IMedianizer"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 10400,
                      "name": "realMedianizer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10396,
                      "src": "876:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMedianizer_$5431",
                        "typeString": "contract IMedianizer"
                      }
                    },
                    "src": "858:32:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMedianizer_$5431",
                      "typeString": "contract IMedianizer"
                    }
                  },
                  "id": 10402,
                  "nodeType": "ExpressionStatement",
                  "src": "858:32:35"
                }
              ]
            },
            "documentation": null,
            "id": 10404,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10397,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10396,
                  "name": "realMedianizer",
                  "nodeType": "VariableDeclaration",
                  "scope": 10404,
                  "src": "813:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IMedianizer_$5431",
                    "typeString": "contract IMedianizer"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10395,
                    "name": "IMedianizer",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5431,
                    "src": "813:11:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMedianizer_$5431",
                      "typeString": "contract IMedianizer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "812:28:35"
            },
            "returnParameters": {
              "id": 10398,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "848:0:35"
            },
            "scope": 10447,
            "src": "801:96:35",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10411,
              "nodeType": "Block",
              "src": "964:39:35",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10409,
                    "name": "_realMedianizer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10394,
                    "src": "981:15:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMedianizer_$5431",
                      "typeString": "contract IMedianizer"
                    }
                  },
                  "functionReturnParameters": 10408,
                  "id": 10410,
                  "nodeType": "Return",
                  "src": "974:22:35"
                }
              ]
            },
            "documentation": null,
            "id": 10412,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMedianizer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "925:2:35"
            },
            "returnParameters": {
              "id": 10408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10407,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10412,
                  "src": "951:11:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IMedianizer_$5431",
                    "typeString": "contract IMedianizer"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10406,
                    "name": "IMedianizer",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5431,
                    "src": "951:11:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMedianizer_$5431",
                      "typeString": "contract IMedianizer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "950:13:35"
            },
            "scope": 10447,
            "src": "903:100:35",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10423,
              "nodeType": "Block",
              "src": "1063:46:35",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 10419,
                        "name": "_realMedianizer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10394,
                        "src": "1080:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMedianizer_$5431",
                          "typeString": "contract IMedianizer"
                        }
                      },
                      "id": 10420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "peek",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5430,
                      "src": "1080:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$_t_bool_$",
                        "typeString": "function () view external returns (uint256,bool)"
                      }
                    },
                    "id": 10421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1080:22:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
                      "typeString": "tuple(uint256,bool)"
                    }
                  },
                  "functionReturnParameters": 10418,
                  "id": 10422,
                  "nodeType": "Return",
                  "src": "1073:29:35"
                }
              ]
            },
            "documentation": null,
            "id": 10424,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "peek",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10413,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1022:2:35"
            },
            "returnParameters": {
              "id": 10418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10415,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10424,
                  "src": "1048:7:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10414,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1048:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10417,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10424,
                  "src": "1057:4:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10416,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1057:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1047:15:35"
            },
            "scope": 10447,
            "src": "1009:100:35",
            "stateMutability": "view",
            "superFunction": 5430,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10433,
              "nodeType": "Block",
              "src": "1163:46:35",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 10429,
                        "name": "_realMedianizer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10394,
                        "src": "1180:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMedianizer_$5431",
                          "typeString": "contract IMedianizer"
                        }
                      },
                      "id": 10430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "read",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5423,
                      "src": "1180:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 10431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1180:22:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10428,
                  "id": 10432,
                  "nodeType": "Return",
                  "src": "1173:29:35"
                }
              ]
            },
            "documentation": null,
            "id": 10434,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "read",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1128:2:35"
            },
            "returnParameters": {
              "id": 10428,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10427,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10434,
                  "src": "1154:7:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10426,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1154:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1153:9:35"
            },
            "scope": 10447,
            "src": "1115:94:35",
            "stateMutability": "view",
            "superFunction": 5423,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10445,
              "nodeType": "Block",
              "src": "1283:49:35",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10441,
                      "name": "_realMedianizer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10394,
                      "src": "1293:15:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMedianizer_$5431",
                        "typeString": "contract IMedianizer"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 10442,
                      "name": "realMedianizer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10436,
                      "src": "1311:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMedianizer_$5431",
                        "typeString": "contract IMedianizer"
                      }
                    },
                    "src": "1293:32:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMedianizer_$5431",
                      "typeString": "contract IMedianizer"
                    }
                  },
                  "id": 10444,
                  "nodeType": "ExpressionStatement",
                  "src": "1293:32:35"
                }
              ]
            },
            "documentation": null,
            "id": 10446,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 10439,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10438,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 16692,
                  "src": "1273:9:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1273:9:35"
              }
            ],
            "name": "setMedianizer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10437,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10436,
                  "name": "realMedianizer",
                  "nodeType": "VariableDeclaration",
                  "scope": 10446,
                  "src": "1238:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IMedianizer_$5431",
                    "typeString": "contract IMedianizer"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10435,
                    "name": "IMedianizer",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5431,
                    "src": "1238:11:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMedianizer_$5431",
                      "typeString": "contract IMedianizer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1237:28:35"
            },
            "returnParameters": {
              "id": 10440,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1283:0:35"
            },
            "scope": 10447,
            "src": "1215:117:35",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 10448,
        "src": "697:637:35"
      }
    ],
    "src": "0:1335:35"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-08-21T21:24:02.916Z",
  "devdoc": {
    "details": "This is used in Keep testnets where Maker has deployed a Medianizer      instance that needs to authorize a single consumer, to enable multiple      tBTC deployments to happen in the background and be pointed at a stable      medianizer instance that is authorized on the Maker contract. It allows      the updating of the backing medianizer and therefore is NOT suitable      for mainnet deployment.",
    "methods": {
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "IntermediaryMedianizer is an updatable intermediary between a real        medianizer and IMedianizer users."
  },
  "userdoc": {
    "methods": {}
  }
}