{
  "contractName": "TBTCDepositToken",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_depositFactoryAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "exists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract ITokenRecipient",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tdtId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "approveAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_depositFactoryAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract ITokenRecipient\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tdtId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Currently, TDTs are minted using the uint256 casting of the      corresponding deposit contract's address. That is, the TDT's id is      convertible to the deposit's address and vice versa. TDTs are minted      automatically by the factory during each deposit's initialization. See      DepositFactory.createNewDeposit() for more info on how the TDT is minted.\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"The `_spender` should implement the `ITokenRecipient`                   interface below to receive approval notifications.\",\"params\":{\"_extraData\":\"Extra information to send to the approved contract.\",\"_spender\":\"`ITokenRecipient`-conforming contract authorized to        operate on the approved token.\",\"_tdtId\":\"The TDT they can spend.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"exists(uint256)\":{\"details\":\"Returns whether the specified token exists.\",\"params\":{\"_tokenId\":\"uint256 ID of the token to query the existence of.\"},\"return\":\"bool whether the token exists.\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"mint(address,uint256)\":{\"details\":\"Mints a new token. Reverts if the given token ID already exists.\",\"params\":{\"_to\":\"The address that will own the minted token\",\"_tokenId\":\"uint256 ID of the token to be minted\"}},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See `IERC165.supportsInterface`.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use `safeTransferFrom` whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}},\"title\":\"tBTC Deposit Token for tracking deposit ownership\"},\"userdoc\":{\"methods\":{\"approveAndCall(address,uint256,bytes)\":{\"notice\":\"Allow another address to spend on the caller's behalf.                   Set allowance for other address and notify.                   Allows `_spender` to transfer the specified TDT                   on your behalf and then ping the contract about it.\"},\"initialize(address)\":{\"notice\":\"Set the address of the System contract on contract initialization.\"}},\"notice\":\"The tBTC Deposit Token, commonly referenced as the TDT, is an         ERC721 non-fungible token whose ownership reflects the ownership         of its corresponding deposit. Each deposit has one TDT, and vice         versa. Owning a TDT is equivalent to owning its corresponding         deposit. TDTs can be transferred freely. tBTC's VendingMachine         contract takes ownership of TDTs and in exchange returns fungible         TBTC tokens whose value is backed 1-to-1 by the corresponding         deposit's BTC.\"}},\"settings\":{\"compilationTarget\":{\"/Users/symf/IdeaProjects/tbtc/solidity/contracts/system/TBTCDepositToken.sol\":\"TBTCDepositToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/symf/IdeaProjects/tbtc/solidity/contracts/interfaces/ITokenRecipient.sol\":{\"keccak256\":\"0x4ac6830ad44d0b0d70ebabc60150e9c915c7c0bd0129ef868d5d2cd8da0c32bd\",\"urls\":[\"bzz-raw://a5c6465285add41f07a951f90405800a8802e323ea11e9c7bdb5625ce109c7f7\",\"dweb:/ipfs/QmRf7B4WxsS7gbSwUotgQM633BQc2ye7rhYC1RNVFamBfp\"]},\"/Users/symf/IdeaProjects/tbtc/solidity/contracts/system/DepositFactoryAuthority.sol\":{\"keccak256\":\"0x061a601f87a25b1908c8aab57a4ee2bf54881b02f9124682c7f1fb4beac0e8bb\",\"urls\":[\"bzz-raw://2be415f3b568979706f7a6d3cb00ae989cd32a7a4dab4ca102edf575204a9dd1\",\"dweb:/ipfs/Qmdjc9KJPUkcK4LLnLdjmv2Wn2WUzdZWXTbtSo7rMMu9aL\"]},\"/Users/symf/IdeaProjects/tbtc/solidity/contracts/system/TBTCDepositToken.sol\":{\"keccak256\":\"0x71f49cfb81d1303883af32c8541ad0915cedaeca82d1fc5ff01afd7b901da2d2\",\"urls\":[\"bzz-raw://e9822874d4896b78647c4840bbc897b391230aaac07c25c01c845424ec540343\",\"dweb:/ipfs/QmPiFck85GYXUWRvv1VjUmMiEM9rzrAkcfKeJNngXL41Rt\"]},\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5eb69360d3441ab2ee799bd7c007cccbffb0896f12b2dfe1456193e2aa180a11\",\"urls\":[\"bzz-raw://072e8b5a1b5acfc2acba9b6fb87d1dc57065aad44572617ad46b014074969eb3\",\"dweb:/ipfs/QmVTDHUriaxBJqiWCWgWC8vYaYYfXSz883LsowzTx1DcpK\"]},\"openzeppelin-solidity/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xac2eacd7e7762e275442f28f21d821544df5aae2ed7698af13be8c41b7005e2e\",\"urls\":[\"bzz-raw://8bdbefb642e7b08535c66bbf074e576cfef2300cdf910c1e0b211f6393833a28\",\"dweb:/ipfs/QmQhfx2Ufr8a2gFXm3KogL66xGgAuAWMwcamkWFKGG6Vya\"]},\"openzeppelin-solidity/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0x661553e43d7c4fbb2de504e5999fd5c104d367488350ed5bf023031bd1ba5ac5\",\"urls\":[\"bzz-raw://b40442c5b350b57b88a081a1eacd2bac962d4ecc1f029f5447a18986f08f6f14\",\"dweb:/ipfs/QmV7wjtRf11ibUHh4g8JjuhMpy68pPhV95L2y46UBoRfsZ\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzz-raw://d62d769b2219d5de39013093412623e624fa887f871826ea3bae6052ee893610\",\"dweb:/ipfs/QmV3yVktya1s617QmuzQR2CfuJgUi3dR2xEZY9ecmqZ2G1\"]},\"openzeppelin-solidity/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xf151df411bbf4eaef1fc8e8480cd10c2cd985f1a36517e63981517610213efc1\",\"urls\":[\"bzz-raw://2a277b3cc3a1a03af5c039bc75cd16bb2d23b529cb2564cc0bea1b1e0eb4dd68\",\"dweb:/ipfs/QmNRxggY8qmjjuLnxggRqE8uBueuCktLwi9YYHagWoaEJ8\"]},\"openzeppelin-solidity/contracts/token/ERC721/ERC721Metadata.sol\":{\"keccak256\":\"0xe5e28b1a405164faa98f8ecd8ed2b00907b89e3d58b2b2bb8ac8b12bc5714489\",\"urls\":[\"bzz-raw://0d5d3f0caa7e7ec91f8a2894e1a6a3513a0c79aa91a498ebf8fdbdd07c12286f\",\"dweb:/ipfs/QmP7r4jQMRxXb5JHy5V9bgMz5FmTezcSDd7ivyzJN88pTR\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xce48937a8007c580b8e2e35705738c922dd17540de89ebee6df06d2917a3f9fc\",\"urls\":[\"bzz-raw://1d117265103ee3efcd454d3aafb3e79a115f9bca6dec78a1229558eb30d14d05\",\"dweb:/ipfs/QmTm5Z1c7zzPiG3Cfj1eBMB23AeiEFGgvmTFQVaeEWXVCw\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0x2b2b99dc7fe8fcd1f9427d00822b99cbc683dc21f5dd7532bd7e2281fd2c2ca2\",\"urls\":[\"bzz-raw://a8024c00e34efaf328f9592e76823c79f25fa0f6006bdf4a1e7fea204afd4773\",\"dweb:/ipfs/QmZns9jTr7843njq3J2iL2LLoWXK5mdzN1bDGd9GL3ahhD\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xadbfb7028fb0f851dc848a48b9e54e7c89ffd2c2edc12fa4ba9bb383dfaa83d9\",\"urls\":[\"bzz-raw://90dceab42713246639100b87d6650037d68e4a2ab2dd4b5768c3ed35d6b3a4a0\",\"dweb:/ipfs/QmQ42UW5nchMoYP9bU9F1AJga5chG8j92fCPkURpiDKsCu\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xf3358e5819ca73357abd6c90bdfffd0474af54364897f6b3e3234c4b71fbe9a1\",\"urls\":[\"bzz-raw://75ae8d04454d1511a2ed986cc8585736f05c5c25280683b3d24712a9f414a4bf\",\"dweb:/ipfs/Qmb3kNCoBUZdah1AgBBD4zMk898j5Qw8ahT1w5cCMYp5Y3\"]}},\"version\":1}",
  "bytecode": "0x60806040526008805460ff191690553480156200001b57600080fd5b506040516200181438038062001814833981810160405260208110156200004157600080fd5b505160408051808201825260128152713a212a21902232b837b9b4ba102a37b5b2b760711b6020828101919091528251808401909352600383526215111560ea1b9083015290620000a26301ffc9a760e01b6001600160e01b036200012216565b620000bd6380ac58cd60e01b6001600160e01b036200012216565b8151620000d29060059060208501906200021a565b508051620000e89060069060208401906200021a565b5062000104635b5e139f60e01b6001600160e01b036200012216565b506200011b9050816001600160e01b03620001a716565b50620002bf565b6001600160e01b0319808216141562000182576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b60085460ff1615620001eb5760405162461bcd60e51b8152600401808060200182810382526025815260200180620017ef6025913960400191505060405180910390fd5b6008805460ff196001600160a01b0390931661010002610100600160a81b031990911617919091166001179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200025d57805160ff19168380011785556200028d565b828001600101855582156200028d579182015b828111156200028d57825182559160200191906001019062000270565b506200029b9291506200029f565b5090565b620002bc91905b808211156200029b5760008155600101620002a6565b90565b61152080620002cf6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80636352211e116100a2578063b88d4fde11610071578063b88d4fde1461036f578063c4d66de814610435578063c87b56dd1461045b578063cae9ca5114610478578063e985e9c5146105335761010b565b80636352211e146102e457806370a082311461030157806395d89b4114610339578063a22cb465146103415761010b565b806323b872dd116100de57806323b872dd1461022f57806340c10f191461026557806342842e0e146102915780634f558e79146102c75761010b565b806301ffc9a71461011057806306fdde031461014b578063081812fc146101c8578063095ea7b314610201575b600080fd5b6101376004803603602081101561012657600080fd5b50356001600160e01b031916610561565b604080519115158252519081900360200190f35b610153610580565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561018d578181015183820152602001610175565b50505050905090810190601f1680156101ba5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101e5600480360360208110156101de57600080fd5b5035610616565b604080516001600160a01b039092168252519081900360200190f35b61022d6004803603604081101561021757600080fd5b506001600160a01b038135169060200135610678565b005b61022d6004803603606081101561024557600080fd5b506001600160a01b03813581169160208101359091169060400135610789565b61022d6004803603604081101561027b57600080fd5b506001600160a01b0381351690602001356107de565b61022d600480360360608110156102a757600080fd5b506001600160a01b0381358116916020810135909116906040013561087b565b610137600480360360208110156102dd57600080fd5b5035610896565b6101e5600480360360208110156102fa57600080fd5b50356108a7565b6103276004803603602081101561031757600080fd5b50356001600160a01b03166108fb565b60408051918252519081900360200190f35b610153610963565b61022d6004803603604081101561035757600080fd5b506001600160a01b03813516906020013515156109c4565b61022d6004803603608081101561038557600080fd5b6001600160a01b038235811692602081013590911691604082013591908101906080810160608201356401000000008111156103c057600080fd5b8201836020820111156103d257600080fd5b803590602001918460018302840111640100000000831117156103f457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610a90945050505050565b61022d6004803603602081101561044b57600080fd5b50356001600160a01b0316610ae8565b6101536004803603602081101561047157600080fd5b5035610b59565b6101376004803603606081101561048e57600080fd5b6001600160a01b03823516916020810135918101906060810160408201356401000000008111156104be57600080fd5b8201836020820111156104d057600080fd5b803590602001918460018302840111640100000000831117156104f257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610c3e945050505050565b6101376004803603604081101561054957600080fd5b506001600160a01b0381358116916020013516610d35565b6001600160e01b03191660009081526020819052604090205460ff1690565b60058054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561060c5780601f106105e15761010080835404028352916020019161060c565b820191906000526020600020905b8154815290600101906020018083116105ef57829003601f168201915b5050505050905090565b600061062182610d63565b61065c5760405162461bcd60e51b815260040180806020018281038252602c81526020018061139e602c913960400191505060405180910390fd5b506000908152600260205260409020546001600160a01b031690565b6000610683826108a7565b9050806001600160a01b0316836001600160a01b031614156106d65760405162461bcd60e51b81526004018080602001828103825260218152602001806114226021913960400191505060405180910390fd5b336001600160a01b03821614806106f257506106f28133610d35565b61072d5760405162461bcd60e51b81526004018080602001828103825260388152602001806113136038913960400191505060405180910390fd5b60008281526002602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6107933382610d80565b6107ce5760405162461bcd60e51b81526004018080602001828103825260318152602001806114436031913960400191505060405180910390fd5b6107d9838383610e24565b505050565b60085460ff1661081f5760405162461bcd60e51b815260040180806020018281038252602d8152602001806114bf602d913960400191505060405180910390fd5b60085461010090046001600160a01b0316331461086d5760405162461bcd60e51b81526004018080602001828103825260268152602001806114996026913960400191505060405180910390fd5b6108778282610f68565b5050565b6107d983838360405180602001604052806000815250610a90565b60006108a182610d63565b92915050565b6000818152600160205260408120546001600160a01b0316806108a15760405162461bcd60e51b81526004018080602001828103825260298152602001806113756029913960400191505060405180910390fd5b60006001600160a01b0382166109425760405162461bcd60e51b815260040180806020018281038252602a81526020018061134b602a913960400191505060405180910390fd5b6001600160a01b03821660009081526003602052604090206108a190611099565b60068054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561060c5780601f106105e15761010080835404028352916020019161060c565b6001600160a01b038216331415610a22576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b3360008181526004602090815260408083206001600160a01b03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b610a9b848484610789565b610aa78484848461109d565b610ae25760405162461bcd60e51b81526004018080602001828103825260328152602001806112916032913960400191505060405180910390fd5b50505050565b60085460ff1615610b2a5760405162461bcd60e51b81526004018080602001828103825260258152602001806114746025913960400191505060405180910390fd5b6008805460ff196001600160a01b0390931661010002610100600160a81b031990911617919091166001179055565b6060610b6482610d63565b610b9f5760405162461bcd60e51b815260040180806020018281038252602f8152602001806113f3602f913960400191505060405180910390fd5b60008281526007602090815260409182902080548351601f600260001961010060018616150201909316929092049182018490048402810184019094528084529091830182828015610c325780601f10610c0757610100808354040283529160200191610c32565b820191906000526020600020905b815481529060010190602001808311610c1557829003601f168201915b50505050509050919050565b6000610c4a8484610678565b604051638f4ffcb160e01b815233600482018181526024830186905230604484018190526080606485019081528651608486015286516001600160a01b038a1695638f4ffcb195948a94938a939192909160a490910190602085019080838360005b83811015610cc4578181015183820152602001610cac565b50505050905090810190601f168015610cf15780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b158015610d1357600080fd5b505af1158015610d27573d6000803e3d6000fd5b506001979650505050505050565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b6000908152600160205260409020546001600160a01b0316151590565b6000610d8b82610d63565b610dc65760405162461bcd60e51b815260040180806020018281038252602c8152602001806112e7602c913960400191505060405180910390fd5b6000610dd1836108a7565b9050806001600160a01b0316846001600160a01b03161480610e0c5750836001600160a01b0316610e0184610616565b6001600160a01b0316145b80610e1c5750610e1c8185610d35565b949350505050565b826001600160a01b0316610e37826108a7565b6001600160a01b031614610e7c5760405162461bcd60e51b81526004018080602001828103825260298152602001806113ca6029913960400191505060405180910390fd5b6001600160a01b038216610ec15760405162461bcd60e51b81526004018080602001828103825260248152602001806112c36024913960400191505060405180910390fd5b610eca816111d0565b6001600160a01b0383166000908152600360205260409020610eeb9061120d565b6001600160a01b0382166000908152600360205260409020610f0c90611224565b60008181526001602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216610fc3576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b610fcc81610d63565b1561101e576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b600081815260016020908152604080832080546001600160a01b0319166001600160a01b03871690811790915583526003909152902061105d90611224565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b5490565b60006110b1846001600160a01b031661122d565b6110bd57506001610e1c565b604051630a85bd0160e11b815233600482018181526001600160a01b03888116602485015260448401879052608060648501908152865160848601528651600095928a169463150b7a029490938c938b938b939260a4019060208501908083838e5b8381101561113757818101518382015260200161111f565b50505050905090810190601f1680156111645780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561118657600080fd5b505af115801561119a573d6000803e3d6000fd5b505050506040513d60208110156111b057600080fd5b50516001600160e01b031916630a85bd0160e11b14915050949350505050565b6000818152600260205260409020546001600160a01b03161561120a57600081815260026020526040902080546001600160a01b03191690555b50565b805461122090600163ffffffff61123316565b9055565b80546001019055565b3b151590565b60008282111561128a576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b5090039056fe4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564466163746f72792063616e206f6e6c7920626520696e697469616c697a6564206f6e63652e43616c6c6572206d757374206265206465706f736974466163746f727920636f6e7472616374466163746f727920696e697469616c697a6174696f6e206d7573742068617665206265656e2063616c6c65642ea265627a7a72315820d69db455750f86136b3cd9966495c35e48ff44d4c53e9811f4591997380ee72c64736f6c63430005110032466163746f72792063616e206f6e6c7920626520696e697469616c697a6564206f6e63652e",
  "deployedBytecode": "",
  "sourceMap": "1263:1823:22:-;;;314:34:18;;;-1:-1:-1;;314:34:18;;;1339:158:22;5:2:-1;;;;30:1;27;20:12;5:2;1339:158:22;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1339:158:22;753:254:65;;;;;;;;;;;-1:-1:-1;;;1339:158:22;753:254:65;;;;;;;;;;;;;;;;;;-1:-1:-1;;;753:254:65;;;;;718:40:57;-1:-1:-1;;;;;;;;718:18:57;:40;:::i;:::-;2220::64;-1:-1:-1;;;;;;;;2220:18:64;:40;:::i;:::-;825:12:65;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;847:16:65;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;951:49:65;-1:-1:-1;;;;;;;;951:18:65;:49;:::i;:::-;-1:-1:-1;1456:34:22;;-1:-1:-1;1467:22:22;-1:-1:-1;;;;;1456:10:22;:34;:::i;:::-;1339:158;1263:1823;;1442:190:57;-1:-1:-1;;;;;;1517:25:57;;;;;1509:66;;;;;-1:-1:-1;;;1509:66:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1585:33:57;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1585:40:57;1621:4;1585:40;;;1442:190::o;476:192:18:-;541:12;;;;539:14;531:64;;;;-1:-1:-1;;;531:64:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;606:15;:26;;-1:-1:-1;;;;;;;606:26:18;;;;;-1:-1:-1;;;;;;606:26:18;;;;642:19;;;;606:15;642:19;;;476:192::o;1263:1823:22:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1263:1823:22;;;-1:-1:-1;1263:1823:22;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "1263:1823:22:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1263:1823:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;915:133:57;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;915:133:57;-1:-1:-1;;;;;;915:133:57;;:::i;:::-;;;;;;;;;;;;;;;;;;1112:83:65;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1112:83:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4237:200:64;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4237:200:64;;:::i;:::-;;;;-1:-1:-1;;;;;4237:200:64;;;;;;;;;;;;;;3541:411;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3541:411:64;;;;;;;;:::i;:::-;;5877:285;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5877:285:64;;;;;;;;;;;;;;;;;:::i;1712:101:22:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1712:101:22;;;;;;;;:::i;6795:132:64:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6795:132:64;;;;;;;;;;;;;;;;;:::i;1998:102:22:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1998:102:22;;:::i;2897:223:64:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2897:223:64;;:::i;2471:207::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2471:207:64;-1:-1:-1;;;;;2471:207:64;;:::i;:::-;;;;;;;;;;;;;;;;1304:87:65;;;:::i;4730:243:64:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4730:243:64;;;;;;;;;;:::i;7632:265::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;7632:265:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;7632:265:64;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7632:265:64;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7632:265:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;7632:265:64;;-1:-1:-1;7632:265:64;;-1:-1:-1;;;;;7632:265:64:i;476:192:18:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;476:192:18;-1:-1:-1;;;;;476:192:18;;:::i;1591:202:65:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1591:202:65;;:::i;2818:266:22:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;2818:266:22;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;2818:266:22;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2818:266:22;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2818:266:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2818:266:22;;-1:-1:-1;2818:266:22;;-1:-1:-1;;;;;2818:266:22:i;5295:145:64:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5295:145:64;;;;;;;;;;:::i;915:133:57:-;-1:-1:-1;;;;;;1008:33:57;985:4;1008:33;;;;;;;;;;;;;;915:133::o;1112:83:65:-;1183:5;1176:12;;;;;;;;-1:-1:-1;;1176:12:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1151:13;;1176:12;;1183:5;;1176:12;;1183:5;1176:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1112:83;:::o;4237:200:64:-;4296:7;4323:16;4331:7;4323;:16::i;:::-;4315:73;;;;-1:-1:-1;;;4315:73:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4406:24:64;;;;:15;:24;;;;;;-1:-1:-1;;;;;4406:24:64;;4237:200::o;3541:411::-;3604:13;3620:16;3628:7;3620;:16::i;:::-;3604:32;;3660:5;-1:-1:-1;;;;;3654:11:64;:2;-1:-1:-1;;;;;3654:11:64;;;3646:57;;;;-1:-1:-1;;;3646:57:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3722:10;-1:-1:-1;;;;;3722:19:64;;;;:58;;;3745:35;3762:5;3769:10;3745:16;:35::i;:::-;3714:148;;;;-1:-1:-1;;;3714:148:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3873:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;3873:29:64;-1:-1:-1;;;;;3873:29:64;;;;;;;;;3917:28;;3873:24;;3917:28;;;;;;;3541:411;;;:::o;5877:285::-;6019:39;6038:10;6050:7;6019:18;:39::i;:::-;6011:101;;;;-1:-1:-1;;;6011:101:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6123:32;6137:4;6143:2;6147:7;6123:13;:32::i;:::-;5877:285;;;:::o;1712:101:22:-;813:12:18;;;;805:70;;;;-1:-1:-1;;;805:70:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;907:15;;;;;-1:-1:-1;;;;;907:15:18;893:10;:29;885:80;;;;-1:-1:-1;;;885:80:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1786:20:22;1792:3;1797:8;1786:5;:20::i;:::-;1712:101;;:::o;6795:132:64:-;6881:39;6898:4;6904:2;6908:7;6881:39;;;;;;;;;;;;:16;:39::i;1998:102:22:-;2053:4;2076:17;2084:8;2076:7;:17::i;:::-;2069:24;1998:102;-1:-1:-1;;1998:102:22:o;2897:223:64:-;2952:7;2987:20;;;:11;:20;;;;;;-1:-1:-1;;;;;2987:20:64;3025:19;3017:73;;;;-1:-1:-1;;;3017:73:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:207;2526:7;-1:-1:-1;;;;;2553:19:64;;2545:74;;;;-1:-1:-1;;;2545:74:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2637:24:64;;;;;;:17;:24;;;;;:34;;:32;:34::i;1304:87:65:-;1377:7;1370:14;;;;;;;;-1:-1:-1;;1370:14:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1345:13;;1370:14;;1377:7;;1370:14;;1377:7;1370:14;;;;;;;;;;;;;;;;;;;;;;;;4730:243:64;-1:-1:-1;;;;;4809:16:64;;4815:10;4809:16;;4801:54;;;;;-1:-1:-1;;;4801:54:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;4885:10;4866:30;;;;:18;:30;;;;;;;;-1:-1:-1;;;;;4866:34:64;;;;;;;;;;;;:45;;-1:-1:-1;;4866:45:64;;;;;;;;;;4926:40;;;;;;;4866:34;;4885:10;4926:40;;;;;;;;;;;4730:243;;:::o;7632:265::-;7738:31;7751:4;7757:2;7761:7;7738:12;:31::i;:::-;7787:48;7810:4;7816:2;7820:7;7829:5;7787:22;:48::i;:::-;7779:111;;;;-1:-1:-1;;;7779:111:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7632:265;;;;:::o;476:192:18:-;541:12;;;;539:14;531:64;;;;-1:-1:-1;;;531:64:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;606:15;:26;;-1:-1:-1;;;;;;;606:26:18;;;;;-1:-1:-1;;;;;;606:26:18;;;;642:19;;;;606:15;642:19;;;476:192::o;1591:202:65:-;1649:13;1682:16;1690:7;1682;:16::i;:::-;1674:76;;;;-1:-1:-1;;;1674:76:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1767:19;;;;:10;:19;;;;;;;;;1760:26;;;;;;-1:-1:-1;;1760:26:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1767:19;;1760:26;;1767:19;1760:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1591:202;;;:::o;2818:266:22:-;2925:4;2941:34;2957:8;2968:6;2941:7;:34::i;:::-;2985:71;;-1:-1:-1;;;2985:71:22;;3010:10;2985:71;;;;;;;;;;;;3038:4;2985:71;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2985:24:22;;;;;3010:10;3022:6;;3038:4;3045:10;;2985:71;;;;;;;;;;;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2985:71:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2985:71:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;3073:4:22;;2818:266;-1:-1:-1;;;;;;;2818:266:22:o;5295:145:64:-;-1:-1:-1;;;;;5398:25:64;;;5375:4;5398:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;5295:145::o;8092:152::-;8149:4;8181:20;;;:11;:20;;;;;;-1:-1:-1;;;;;8181:20:64;8218:19;;;8092:152::o;8605:329::-;8690:4;8714:16;8722:7;8714;:16::i;:::-;8706:73;;;;-1:-1:-1;;;8706:73:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8789:13;8805:16;8813:7;8805;:16::i;:::-;8789:32;;8850:5;-1:-1:-1;;;;;8839:16:64;:7;-1:-1:-1;;;;;8839:16:64;;:51;;;;8883:7;-1:-1:-1;;;;;8859:31:64;:20;8871:7;8859:11;:20::i;:::-;-1:-1:-1;;;;;8859:31:64;;8839:51;:87;;;;8894:32;8911:5;8918:7;8894:16;:32::i;:::-;8831:96;8605:329;-1:-1:-1;;;;8605:329:64:o;10751:447::-;10864:4;-1:-1:-1;;;;;10844:24:64;:16;10852:7;10844;:16::i;:::-;-1:-1:-1;;;;;10844:24:64;;10836:78;;;;-1:-1:-1;;;10836:78:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10932:16:64;;10924:65;;;;-1:-1:-1;;;10924:65:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11000:23;11015:7;11000:14;:23::i;:::-;-1:-1:-1;;;;;11034:23:64;;;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;-1:-1:-1;;;;;11079:21:64;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;11123:20;;;;:11;:20;;;;;;:25;;-1:-1:-1;;;;;;11123:25:64;-1:-1:-1;;;;;11123:25:64;;;;;;;;;11164:27;;11123:20;;11164:27;;;;;;;10751:447;;;:::o;9179:327::-;-1:-1:-1;;;;;9250:16:64;;9242:61;;;;;-1:-1:-1;;;9242:61:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9322:16;9330:7;9322;:16::i;:::-;9321:17;9313:58;;;;;-1:-1:-1;;;9313:58:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;9382:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;;;;;9382:25:64;-1:-1:-1;;;;;9382:25:64;;;;;;;;9417:21;;:17;:21;;;;;:33;;:31;:33::i;:::-;9466;;9491:7;;-1:-1:-1;;;;;9466:33:64;;;9483:1;;9466:33;;9483:1;;9466:33;9179:327;;:::o;1063:112:56:-;1154:14;;1063:112::o;11771:347:64:-;11892:4;11917:15;:2;-1:-1:-1;;;;;11917:13:64;;:15::i;:::-;11912:58;;-1:-1:-1;11955:4:64;11948:11;;11912:58;11996:70;;-1:-1:-1;;;11996:70:64;;12033:10;11996:70;;;;;;-1:-1:-1;;;;;11996:70:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;11980:13;;11996:36;;;;;;12033:10;;12045:4;;12051:7;;12060:5;;11996:70;;;;;;;;;;;11980:13;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;11996:70:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11996:70:64;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11996:70:64;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11996:70:64;-1:-1:-1;;;;;;12084:26:64;-1:-1:-1;;;12084:26:64;;-1:-1:-1;;11771:347:64;;;;;;:::o;12280:171::-;12379:1;12343:24;;;:15;:24;;;;;;-1:-1:-1;;;;;12343:24:64;:38;12339:106;;12432:1;12397:24;;;:15;:24;;;;;:37;;-1:-1:-1;;;;;;12397:37:64;;;12339:106;12280:171;:::o;1276:108:56:-;1356:14;;:21;;1375:1;1356:21;:18;:21;:::i;:::-;1339:38;;1276:108::o;1181:89::-;1244:19;;1262:1;1244:19;;;1181:89::o;542:413:69:-;902:20;940:8;;;542:413::o;1274:179:59:-;1332:7;1364:1;1359;:6;;1351:49;;;;;-1:-1:-1;;;1351:49:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1422:5:59;;;1274:179::o",
  "source": "pragma solidity 0.5.17;\n\nimport {ERC721Metadata} from \"openzeppelin-solidity/contracts/token/ERC721/ERC721Metadata.sol\";\nimport {DepositFactoryAuthority} from \"./DepositFactoryAuthority.sol\";\nimport {ITokenRecipient} from \"../interfaces/ITokenRecipient.sol\";\n\n/// @title tBTC Deposit Token for tracking deposit ownership\n/// @notice The tBTC Deposit Token, commonly referenced as the TDT, is an\n///         ERC721 non-fungible token whose ownership reflects the ownership\n///         of its corresponding deposit. Each deposit has one TDT, and vice\n///         versa. Owning a TDT is equivalent to owning its corresponding\n///         deposit. TDTs can be transferred freely. tBTC's VendingMachine\n///         contract takes ownership of TDTs and in exchange returns fungible\n///         TBTC tokens whose value is backed 1-to-1 by the corresponding\n///         deposit's BTC.\n/// @dev Currently, TDTs are minted using the uint256 casting of the\n///      corresponding deposit contract's address. That is, the TDT's id is\n///      convertible to the deposit's address and vice versa. TDTs are minted\n///      automatically by the factory during each deposit's initialization. See\n///      DepositFactory.createNewDeposit() for more info on how the TDT is minted.\ncontract TBTCDepositToken is ERC721Metadata, DepositFactoryAuthority {\n\n    constructor(address _depositFactoryAddress)\n        ERC721Metadata(\"tBTC Deposit Token\", \"TDT\")\n    public {\n        initialize(_depositFactoryAddress);\n    }\n\n    /// @dev Mints a new token.\n    /// Reverts if the given token ID already exists.\n    /// @param _to The address that will own the minted token\n    /// @param _tokenId uint256 ID of the token to be minted\n    function mint(address _to, uint256 _tokenId) public onlyFactory {\n        _mint(_to, _tokenId);\n    }\n\n    /// @dev Returns whether the specified token exists.\n    /// @param _tokenId uint256 ID of the token to query the existence of.\n    /// @return bool whether the token exists.\n    function exists(uint256 _tokenId) public view returns (bool) {\n        return _exists(_tokenId);\n    }\n\n    /// @notice           Allow another address to spend on the caller's behalf.\n    ///                   Set allowance for other address and notify.\n    ///                   Allows `_spender` to transfer the specified TDT\n    ///                   on your behalf and then ping the contract about it.\n    /// @dev              The `_spender` should implement the `ITokenRecipient`\n    ///                   interface below to receive approval notifications.\n    /// @param _spender   `ITokenRecipient`-conforming contract authorized to\n    ///        operate on the approved token.\n    /// @param _tdtId     The TDT they can spend.\n    /// @param _extraData Extra information to send to the approved contract.\n    function approveAndCall(ITokenRecipient _spender, uint256 _tdtId, bytes memory _extraData) public returns (bool) {\n        approve(address(_spender), _tdtId);\n        _spender.receiveApproval(msg.sender, _tdtId, address(this), _extraData);\n        return true;\n    }\n}\n",
  "sourcePath": "/Users/symf/IdeaProjects/tbtc/solidity/contracts/system/TBTCDepositToken.sol",
  "ast": {
    "absolutePath": "/Users/symf/IdeaProjects/tbtc/solidity/contracts/system/TBTCDepositToken.sol",
    "exportedSymbols": {
      "TBTCDepositToken": [
        6854
      ]
    },
    "id": 6855,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6769,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:22"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Metadata.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721Metadata.sol",
        "id": 6771,
        "nodeType": "ImportDirective",
        "scope": 6855,
        "sourceUnit": 17978,
        "src": "25:95:22",
        "symbolAliases": [
          {
            "foreign": 6770,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/symf/IdeaProjects/tbtc/solidity/contracts/system/DepositFactoryAuthority.sol",
        "file": "./DepositFactoryAuthority.sol",
        "id": 6773,
        "nodeType": "ImportDirective",
        "scope": 6855,
        "sourceUnit": 6231,
        "src": "121:70:22",
        "symbolAliases": [
          {
            "foreign": 6772,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/symf/IdeaProjects/tbtc/solidity/contracts/interfaces/ITokenRecipient.sol",
        "file": "../interfaces/ITokenRecipient.sol",
        "id": 6775,
        "nodeType": "ImportDirective",
        "scope": 6855,
        "sourceUnit": 5524,
        "src": "192:66:22",
        "symbolAliases": [
          {
            "foreign": 6774,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6776,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 17977,
              "src": "1292:14:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$17977",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 6777,
            "nodeType": "InheritanceSpecifier",
            "src": "1292:14:22"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6778,
              "name": "DepositFactoryAuthority",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6230,
              "src": "1308:23:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DepositFactoryAuthority_$6230",
                "typeString": "contract DepositFactoryAuthority"
              }
            },
            "id": 6779,
            "nodeType": "InheritanceSpecifier",
            "src": "1308:23:22"
          }
        ],
        "contractDependencies": [
          6230,
          16505,
          16515,
          17848,
          17977,
          18080,
          18103
        ],
        "contractKind": "contract",
        "documentation": "@title tBTC Deposit Token for tracking deposit ownership\n @notice The tBTC Deposit Token, commonly referenced as the TDT, is an\n         ERC721 non-fungible token whose ownership reflects the ownership\n         of its corresponding deposit. Each deposit has one TDT, and vice\n         versa. Owning a TDT is equivalent to owning its corresponding\n         deposit. TDTs can be transferred freely. tBTC's VendingMachine\n         contract takes ownership of TDTs and in exchange returns fungible\n         TBTC tokens whose value is backed 1-to-1 by the corresponding\n         deposit's BTC.\n @dev Currently, TDTs are minted using the uint256 casting of the\n      corresponding deposit contract's address. That is, the TDT's id is\n      convertible to the deposit's address and vice versa. TDTs are minted\n      automatically by the factory during each deposit's initialization. See\n      DepositFactory.createNewDeposit() for more info on how the TDT is minted.",
        "fullyImplemented": true,
        "id": 6854,
        "linearizedBaseContracts": [
          6854,
          6230,
          17977,
          18103,
          17848,
          18080,
          16505,
          16515
        ],
        "name": "TBTCDepositToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 6792,
              "nodeType": "Block",
              "src": "1446:51:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6789,
                        "name": "_depositFactoryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6781,
                        "src": "1467:22:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6788,
                      "name": "initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6212,
                      "src": "1456:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 6790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1456:34:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6791,
                  "nodeType": "ExpressionStatement",
                  "src": "1456:34:22"
                }
              ]
            },
            "documentation": null,
            "id": 6793,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "74425443204465706f73697420546f6b656e",
                    "id": 6784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1406:20:22",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_0ba473ebf50cb901ddb299e10897c598910c87bd37b45562f653ff4aad7a78db",
                      "typeString": "literal_string \"tBTC Deposit Token\""
                    },
                    "value": "tBTC Deposit Token"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "544454",
                    "id": 6785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1428:5:22",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_1704b82c57cad252ae2ae014b178afce8e403189d3d12e098e6e949b0ca3b2bc",
                      "typeString": "literal_string \"TDT\""
                    },
                    "value": "TDT"
                  }
                ],
                "id": 6786,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6783,
                  "name": "ERC721Metadata",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 17977,
                  "src": "1391:14:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$17977_$",
                    "typeString": "type(contract ERC721Metadata)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1391:43:22"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6781,
                  "name": "_depositFactoryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 6793,
                  "src": "1351:30:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6780,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1351:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1350:32:22"
            },
            "returnParameters": {
              "id": 6787,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1446:0:22"
            },
            "scope": 6854,
            "src": "1339:158:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6807,
              "nodeType": "Block",
              "src": "1776:37:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6803,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6795,
                        "src": "1792:3:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6804,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6797,
                        "src": "1797:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6802,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17672,
                      "src": "1786:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1786:20:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6806,
                  "nodeType": "ExpressionStatement",
                  "src": "1786:20:22"
                }
              ]
            },
            "documentation": "@dev Mints a new token.\n Reverts if the given token ID already exists.\n @param _to The address that will own the minted token\n @param _tokenId uint256 ID of the token to be minted",
            "id": 6808,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 6800,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6799,
                  "name": "onlyFactory",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6229,
                  "src": "1764:11:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1764:11:22"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6798,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6795,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 6808,
                  "src": "1726:11:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6794,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1726:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6797,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 6808,
                  "src": "1739:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6796,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1739:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1725:31:22"
            },
            "returnParameters": {
              "id": 6801,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1776:0:22"
            },
            "scope": 6854,
            "src": "1712:101:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6819,
              "nodeType": "Block",
              "src": "2059:41:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6816,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6810,
                        "src": "2084:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6815,
                      "name": "_exists",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17588,
                      "src": "2076:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 6817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2076:17:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6814,
                  "id": 6818,
                  "nodeType": "Return",
                  "src": "2069:24:22"
                }
              ]
            },
            "documentation": "@dev Returns whether the specified token exists.\n @param _tokenId uint256 ID of the token to query the existence of.\n @return bool whether the token exists.",
            "id": 6820,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exists",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6810,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 6820,
                  "src": "2014:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6809,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2014:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2013:18:22"
            },
            "returnParameters": {
              "id": 6814,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6813,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6820,
                  "src": "2053:4:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6812,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2053:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2052:6:22"
            },
            "scope": 6854,
            "src": "1998:102:22",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6852,
              "nodeType": "Block",
              "src": "2931:153:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 6833,
                            "name": "_spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6822,
                            "src": "2957:8:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ITokenRecipient_$5523",
                              "typeString": "contract ITokenRecipient"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ITokenRecipient_$5523",
                              "typeString": "contract ITokenRecipient"
                            }
                          ],
                          "id": 6832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2949:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 6834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2949:17:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6835,
                        "name": "_tdtId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6824,
                        "src": "2968:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6831,
                      "name": "approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17431
                      ],
                      "referencedDeclaration": 17431,
                      "src": "2941:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2941:34:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6837,
                  "nodeType": "ExpressionStatement",
                  "src": "2941:34:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6841,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18153,
                          "src": "3010:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3010:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6843,
                        "name": "_tdtId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6824,
                        "src": "3022:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 6845,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18191,
                            "src": "3038:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TBTCDepositToken_$6854",
                              "typeString": "contract TBTCDepositToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TBTCDepositToken_$6854",
                              "typeString": "contract TBTCDepositToken"
                            }
                          ],
                          "id": 6844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3030:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 6846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3030:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6847,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6826,
                        "src": "3045:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 6838,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6822,
                        "src": "2985:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITokenRecipient_$5523",
                          "typeString": "contract ITokenRecipient"
                        }
                      },
                      "id": 6840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "receiveApproval",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5522,
                      "src": "2985:24:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,address,bytes memory) external"
                      }
                    },
                    "id": 6848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2985:71:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6849,
                  "nodeType": "ExpressionStatement",
                  "src": "2985:71:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 6850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3073:4:22",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 6830,
                  "id": 6851,
                  "nodeType": "Return",
                  "src": "3066:11:22"
                }
              ]
            },
            "documentation": "@notice           Allow another address to spend on the caller's behalf.\n                   Set allowance for other address and notify.\n                   Allows `_spender` to transfer the specified TDT\n                   on your behalf and then ping the contract about it.\n @dev              The `_spender` should implement the `ITokenRecipient`\n                   interface below to receive approval notifications.\n @param _spender   `ITokenRecipient`-conforming contract authorized to\n        operate on the approved token.\n @param _tdtId     The TDT they can spend.\n @param _extraData Extra information to send to the approved contract.",
            "id": 6853,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approveAndCall",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6822,
                  "name": "_spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 6853,
                  "src": "2842:24:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ITokenRecipient_$5523",
                    "typeString": "contract ITokenRecipient"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 6821,
                    "name": "ITokenRecipient",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5523,
                    "src": "2842:15:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITokenRecipient_$5523",
                      "typeString": "contract ITokenRecipient"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6824,
                  "name": "_tdtId",
                  "nodeType": "VariableDeclaration",
                  "scope": 6853,
                  "src": "2868:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6823,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2868:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6826,
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 6853,
                  "src": "2884:23:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6825,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2884:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2841:67:22"
            },
            "returnParameters": {
              "id": 6830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6829,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6853,
                  "src": "2925:4:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6828,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2925:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2924:6:22"
            },
            "scope": 6854,
            "src": "2818:266:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 6855,
        "src": "1263:1823:22"
      }
    ],
    "src": "0:3087:22"
  },
  "legacyAST": {
    "absolutePath": "/Users/symf/IdeaProjects/tbtc/solidity/contracts/system/TBTCDepositToken.sol",
    "exportedSymbols": {
      "TBTCDepositToken": [
        6854
      ]
    },
    "id": 6855,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6769,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:22"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Metadata.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721Metadata.sol",
        "id": 6771,
        "nodeType": "ImportDirective",
        "scope": 6855,
        "sourceUnit": 17978,
        "src": "25:95:22",
        "symbolAliases": [
          {
            "foreign": 6770,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/symf/IdeaProjects/tbtc/solidity/contracts/system/DepositFactoryAuthority.sol",
        "file": "./DepositFactoryAuthority.sol",
        "id": 6773,
        "nodeType": "ImportDirective",
        "scope": 6855,
        "sourceUnit": 6231,
        "src": "121:70:22",
        "symbolAliases": [
          {
            "foreign": 6772,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/symf/IdeaProjects/tbtc/solidity/contracts/interfaces/ITokenRecipient.sol",
        "file": "../interfaces/ITokenRecipient.sol",
        "id": 6775,
        "nodeType": "ImportDirective",
        "scope": 6855,
        "sourceUnit": 5524,
        "src": "192:66:22",
        "symbolAliases": [
          {
            "foreign": 6774,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6776,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 17977,
              "src": "1292:14:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$17977",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 6777,
            "nodeType": "InheritanceSpecifier",
            "src": "1292:14:22"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6778,
              "name": "DepositFactoryAuthority",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6230,
              "src": "1308:23:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DepositFactoryAuthority_$6230",
                "typeString": "contract DepositFactoryAuthority"
              }
            },
            "id": 6779,
            "nodeType": "InheritanceSpecifier",
            "src": "1308:23:22"
          }
        ],
        "contractDependencies": [
          6230,
          16505,
          16515,
          17848,
          17977,
          18080,
          18103
        ],
        "contractKind": "contract",
        "documentation": "@title tBTC Deposit Token for tracking deposit ownership\n @notice The tBTC Deposit Token, commonly referenced as the TDT, is an\n         ERC721 non-fungible token whose ownership reflects the ownership\n         of its corresponding deposit. Each deposit has one TDT, and vice\n         versa. Owning a TDT is equivalent to owning its corresponding\n         deposit. TDTs can be transferred freely. tBTC's VendingMachine\n         contract takes ownership of TDTs and in exchange returns fungible\n         TBTC tokens whose value is backed 1-to-1 by the corresponding\n         deposit's BTC.\n @dev Currently, TDTs are minted using the uint256 casting of the\n      corresponding deposit contract's address. That is, the TDT's id is\n      convertible to the deposit's address and vice versa. TDTs are minted\n      automatically by the factory during each deposit's initialization. See\n      DepositFactory.createNewDeposit() for more info on how the TDT is minted.",
        "fullyImplemented": true,
        "id": 6854,
        "linearizedBaseContracts": [
          6854,
          6230,
          17977,
          18103,
          17848,
          18080,
          16505,
          16515
        ],
        "name": "TBTCDepositToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 6792,
              "nodeType": "Block",
              "src": "1446:51:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6789,
                        "name": "_depositFactoryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6781,
                        "src": "1467:22:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6788,
                      "name": "initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6212,
                      "src": "1456:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 6790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1456:34:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6791,
                  "nodeType": "ExpressionStatement",
                  "src": "1456:34:22"
                }
              ]
            },
            "documentation": null,
            "id": 6793,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "74425443204465706f73697420546f6b656e",
                    "id": 6784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1406:20:22",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_0ba473ebf50cb901ddb299e10897c598910c87bd37b45562f653ff4aad7a78db",
                      "typeString": "literal_string \"tBTC Deposit Token\""
                    },
                    "value": "tBTC Deposit Token"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "544454",
                    "id": 6785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1428:5:22",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_1704b82c57cad252ae2ae014b178afce8e403189d3d12e098e6e949b0ca3b2bc",
                      "typeString": "literal_string \"TDT\""
                    },
                    "value": "TDT"
                  }
                ],
                "id": 6786,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6783,
                  "name": "ERC721Metadata",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 17977,
                  "src": "1391:14:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$17977_$",
                    "typeString": "type(contract ERC721Metadata)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1391:43:22"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6781,
                  "name": "_depositFactoryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 6793,
                  "src": "1351:30:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6780,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1351:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1350:32:22"
            },
            "returnParameters": {
              "id": 6787,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1446:0:22"
            },
            "scope": 6854,
            "src": "1339:158:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6807,
              "nodeType": "Block",
              "src": "1776:37:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6803,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6795,
                        "src": "1792:3:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6804,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6797,
                        "src": "1797:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6802,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17672,
                      "src": "1786:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1786:20:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6806,
                  "nodeType": "ExpressionStatement",
                  "src": "1786:20:22"
                }
              ]
            },
            "documentation": "@dev Mints a new token.\n Reverts if the given token ID already exists.\n @param _to The address that will own the minted token\n @param _tokenId uint256 ID of the token to be minted",
            "id": 6808,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 6800,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6799,
                  "name": "onlyFactory",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6229,
                  "src": "1764:11:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1764:11:22"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6798,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6795,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 6808,
                  "src": "1726:11:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6794,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1726:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6797,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 6808,
                  "src": "1739:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6796,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1739:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1725:31:22"
            },
            "returnParameters": {
              "id": 6801,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1776:0:22"
            },
            "scope": 6854,
            "src": "1712:101:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6819,
              "nodeType": "Block",
              "src": "2059:41:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6816,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6810,
                        "src": "2084:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6815,
                      "name": "_exists",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17588,
                      "src": "2076:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 6817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2076:17:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6814,
                  "id": 6818,
                  "nodeType": "Return",
                  "src": "2069:24:22"
                }
              ]
            },
            "documentation": "@dev Returns whether the specified token exists.\n @param _tokenId uint256 ID of the token to query the existence of.\n @return bool whether the token exists.",
            "id": 6820,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exists",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6810,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 6820,
                  "src": "2014:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6809,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2014:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2013:18:22"
            },
            "returnParameters": {
              "id": 6814,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6813,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6820,
                  "src": "2053:4:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6812,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2053:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2052:6:22"
            },
            "scope": 6854,
            "src": "1998:102:22",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6852,
              "nodeType": "Block",
              "src": "2931:153:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 6833,
                            "name": "_spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6822,
                            "src": "2957:8:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ITokenRecipient_$5523",
                              "typeString": "contract ITokenRecipient"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ITokenRecipient_$5523",
                              "typeString": "contract ITokenRecipient"
                            }
                          ],
                          "id": 6832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2949:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 6834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2949:17:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6835,
                        "name": "_tdtId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6824,
                        "src": "2968:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6831,
                      "name": "approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17431
                      ],
                      "referencedDeclaration": 17431,
                      "src": "2941:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2941:34:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6837,
                  "nodeType": "ExpressionStatement",
                  "src": "2941:34:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6841,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18153,
                          "src": "3010:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3010:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6843,
                        "name": "_tdtId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6824,
                        "src": "3022:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 6845,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18191,
                            "src": "3038:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TBTCDepositToken_$6854",
                              "typeString": "contract TBTCDepositToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TBTCDepositToken_$6854",
                              "typeString": "contract TBTCDepositToken"
                            }
                          ],
                          "id": 6844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3030:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 6846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3030:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6847,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6826,
                        "src": "3045:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 6838,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6822,
                        "src": "2985:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITokenRecipient_$5523",
                          "typeString": "contract ITokenRecipient"
                        }
                      },
                      "id": 6840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "receiveApproval",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5522,
                      "src": "2985:24:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,address,bytes memory) external"
                      }
                    },
                    "id": 6848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2985:71:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6849,
                  "nodeType": "ExpressionStatement",
                  "src": "2985:71:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 6850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3073:4:22",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 6830,
                  "id": 6851,
                  "nodeType": "Return",
                  "src": "3066:11:22"
                }
              ]
            },
            "documentation": "@notice           Allow another address to spend on the caller's behalf.\n                   Set allowance for other address and notify.\n                   Allows `_spender` to transfer the specified TDT\n                   on your behalf and then ping the contract about it.\n @dev              The `_spender` should implement the `ITokenRecipient`\n                   interface below to receive approval notifications.\n @param _spender   `ITokenRecipient`-conforming contract authorized to\n        operate on the approved token.\n @param _tdtId     The TDT they can spend.\n @param _extraData Extra information to send to the approved contract.",
            "id": 6853,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approveAndCall",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6822,
                  "name": "_spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 6853,
                  "src": "2842:24:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ITokenRecipient_$5523",
                    "typeString": "contract ITokenRecipient"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 6821,
                    "name": "ITokenRecipient",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5523,
                    "src": "2842:15:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITokenRecipient_$5523",
                      "typeString": "contract ITokenRecipient"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6824,
                  "name": "_tdtId",
                  "nodeType": "VariableDeclaration",
                  "scope": 6853,
                  "src": "2868:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6823,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2868:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6826,
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 6853,
                  "src": "2884:23:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6825,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2884:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2841:67:22"
            },
            "returnParameters": {
              "id": 6830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6829,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6853,
                  "src": "2925:4:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6828,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2925:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2924:6:22"
            },
            "scope": 6854,
            "src": "2818:266:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 6855,
        "src": "1263:1823:22"
      }
    ],
    "src": "0:3087:22"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-08-21T21:24:02.874Z",
  "devdoc": {
    "details": "Currently, TDTs are minted using the uint256 casting of the      corresponding deposit contract's address. That is, the TDT's id is      convertible to the deposit's address and vice versa. TDTs are minted      automatically by the factory during each deposit's initialization. See      DepositFactory.createNewDeposit() for more info on how the TDT is minted.",
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "approveAndCall(address,uint256,bytes)": {
        "details": "The `_spender` should implement the `ITokenRecipient`                   interface below to receive approval notifications.",
        "params": {
          "_extraData": "Extra information to send to the approved contract.",
          "_spender": "`ITokenRecipient`-conforming contract authorized to        operate on the approved token.",
          "_tdtId": "The TDT they can spend."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "exists(uint256)": {
        "details": "Returns whether the specified token exists.",
        "params": {
          "_tokenId": "uint256 ID of the token to query the existence of."
        },
        "return": "bool whether the token exists."
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "mint(address,uint256)": {
        "details": "Mints a new token. Reverts if the given token ID already exists.",
        "params": {
          "_to": "The address that will own the minted token",
          "_tokenId": "uint256 ID of the token to be minted"
        }
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See `IERC165.supportsInterface`.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use `safeTransferFrom` whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    },
    "title": "tBTC Deposit Token for tracking deposit ownership"
  },
  "userdoc": {
    "methods": {
      "approveAndCall(address,uint256,bytes)": {
        "notice": "Allow another address to spend on the caller's behalf.                   Set allowance for other address and notify.                   Allows `_spender` to transfer the specified TDT                   on your behalf and then ping the contract about it."
      },
      "initialize(address)": {
        "notice": "Set the address of the System contract on contract initialization."
      }
    },
    "notice": "The tBTC Deposit Token, commonly referenced as the TDT, is an         ERC721 non-fungible token whose ownership reflects the ownership         of its corresponding deposit. Each deposit has one TDT, and vice         versa. Owning a TDT is equivalent to owning its corresponding         deposit. TDTs can be transferred freely. tBTC's VendingMachine         contract takes ownership of TDTs and in exchange returns fungible         TBTC tokens whose value is backed 1-to-1 by the corresponding         deposit's BTC."
  }
}